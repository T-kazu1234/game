// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  enchant();

  window.onload = function() {
    var Bear, GAME_H, GAME_W, NUM_BEAR, RESOURCE, SPLITE_BASES, SPLITE_H, SPLITE_W, game, rand, randInAry, _ref;

    _ref = [320, 320], GAME_W = _ref[0], GAME_H = _ref[1];
    RESOURCE = ['chara1.png'];
    SPLITE_W = 32;
    SPLITE_H = 32;
    SPLITE_BASES = [5, 10];
    NUM_BEAR = 10;
    rand = function(n, m) {
      return n + Math.floor(Math.random() * (m - n + 1));
    };
    randInAry = function(ary) {
      return ary[Math.floor(Math.random() * ary.length)];
    };
    Bear = (function(_super) {
      __extends(Bear, _super);

      function Bear(x, y, dx, dy, splite_base) {
        var _ref1;

        if (x == null) {
          x = 0;
        }
        if (y == null) {
          y = 0;
        }
        this.dx = dx != null ? dx : 0;
        this.dy = dy != null ? dy : 0;
        this.splite_base = splite_base != null ? splite_base : 5;
        Bear.__super__.constructor.call(this, SPLITE_W, SPLITE_H);
        _ref1 = [x, y], this.x = _ref1[0], this.y = _ref1[1];
        this.image = game.assets[RESOURCE];
        this.frame = this.splite_base;
        game.rootScene.addChild(this);
        this.on("enterframe", function() {
          var d, _ref2;

          d = this.dx * this.dx + this.dy * this.dy;
          this.frame = this.splite_base + (d < 0.01 ? 0 : this.age % 3);
          this.dx *= 0.98;
          this.dy *= 0.98;
          this.reflect();
          _ref2 = [this.x + this.dx, this.y + this.dy], this.x = _ref2[0], this.y = _ref2[1];
          if (this.x < 0) {
            this.x = 0;
          }
          if (this.x > GAME_W - SPLITE_W) {
            this.x = GAME_W - SPLITE_W;
          }
          if (this.y < 0) {
            this.y = 0;
          }
          if (this.y > GAME_H - SPLITE_H) {
            this.y = GAME_H - SPLITE_H;
          }
          this.scaleX = this.dx < 0 ? -1 : 1;
          return console.log("" + this.dx + ", " + this.dy);
        });
        this.on("touchstart", function() {
          var _ref2;

          _ref2 = [rand(-10, 10), rand(-10, 10)], this.dx = _ref2[0], this.dy = _ref2[1];
          this.scaleX = this.dx < 0 ? -1 : 1;
          return this.reflect();
        });
      }

      Bear.prototype.reflect = function() {
        if ((GAME_W - SPLITE_W <= this.x) || (this.x <= 0)) {
          this.dx *= -0.4;
          this.scaleX *= -1;
        }
        if ((GAME_H - SPLITE_H <= this.y) || (this.y <= 0)) {
          return this.dy *= -0.4;
        }
      };

      return Bear;

    })(Sprite);
    game = new Game(GAME_W, GAME_H);
    game.fps = 10;
    game.preload(RESOURCE);
    game.rootScene.backgroundColor = 'rgb(240, 240, 240)';
    game.onload = function() {
      var bear, bears, dx, dy, frame, i, x, y, _i, _ref1, _ref2, _results;

      bears = [];
      _results = [];
      for (i = _i = 1; 1 <= NUM_BEAR ? _i <= NUM_BEAR : _i >= NUM_BEAR; i = 1 <= NUM_BEAR ? ++_i : --_i) {
        _ref1 = [rand(0, GAME_W - SPLITE_W), rand(0, GAME_H - SPLITE_H)], x = _ref1[0], y = _ref1[1];
        _ref2 = [rand(-10, 10), rand(-10, 10)], dx = _ref2[0], dy = _ref2[1];
        frame = randInAry(SPLITE_BASES);
        bear = new Bear(x, y, dx, dy, frame);
        _results.push(bears.push(bear));
      }
      return _results;
    };
    return game.start();
  };

}).call(this);
